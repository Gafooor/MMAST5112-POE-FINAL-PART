import React, { useState } from 'react';
import { View, Text, TextInput, Button, FlatList, StyleSheet } from 'react-native';

const DishManager = () => {
  const [dishName, setDishName] = useState('');
  const [dishPrice, setDishPrice] = useState('');
  const [dishDescription, setDishDescription] = useState('');
  const [dishCategory, setDishCategory] = useState('Starters');
  const [dishes, setDishes] = useState([]);

  const categories = ['Starters', 'Mains', 'Desserts', 'Drinks'];

  const addDish = () => {
    if (dishName && dishPrice && dishDescription) {
      const newDish = {
        id: Math.random().toString(),
        name: dishName,
        price: parseFloat(dishPrice),
        description: dishDescription,
        category: dishCategory
      };
      setDishes([...dishes, newDish]);
      setDishName('');
      setDishPrice('');
      setDishDescription('');
    }
  };

  const deleteDish = (id) => {
    setDishes(dishes.filter(dish => dish.id !== id));
  };

  const renderDish = ({ item }) => (
    <View style={styles.dishContainer}>
      <Text style={styles.dishText}>{item.name} (${item.price.toFixed(2)})</Text>
      <Text style={styles.dishText}>{item.description}</Text>
      <Text style={styles.dishText}>Category: {item.category}</Text>
      <Button title="Delete" onPress={() => deleteDish(item.id)} />
    </View>
  );

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Chef Dish Manager</Text>
      <TextInput
        placeholder="Dish Name"
        value={dishName}
        onChangeText={setDishName}
        style={styles.input}
      />
      <TextInput
        placeholder="Price"
        value={dishPrice}
        onChangeText={setDishPrice}
        style={styles.input}
        keyboardType="numeric"
      />
      <TextInput
        placeholder="Description"
        value={dishDescription}
        onChangeText={setDishDescription}
        style={styles.input}
      />
      <Text style={styles.label}>Select Category:</Text>
      {categories.map((category) => (
        <Button
          key={category}
          title={category}
          onPress={() => setDishCategory(category)}
          color={dishCategory === category ? 'green' : 'gray'}
        />
      ))}
      <Button title="Add Dish" onPress={addDish} />

      <FlatList
        data={dishes}
        renderItem={renderDish}
        keyExtractor={(item) => item.id}
        ListEmptyComponent={<Text style={styles.emptyText}>No dishes added</Text>}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  input: {
    borderWidth: 1,
    borderColor: '#ccc',
    padding: 10,
    marginBottom: 10,
    borderRadius: 5,
  },
  label: {
    fontSize: 16,
    marginVertical: 10,
  },
  dishContainer: {
    backgroundColor: '#f9f9f9',
    padding: 15,
    borderRadius: 10,
    marginVertical: 10,
    borderWidth: 1,
    borderColor: '#ddd',
  },
  dishText: {
    fontSize: 16,
  },
  emptyText: {
    fontSize: 16,
    color: 'gray',
    textAlign: 'center',
    marginTop: 20,
  },
});

export default DishManager;