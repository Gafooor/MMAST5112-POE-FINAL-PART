import React, { useState } from 'react';
import { View, Text, TextInput, TouchableOpacity, FlatList, StyleSheet, Alert } from 'react-native';

const ChefMenuScreen = () => {
  const [dishName, setDishName] = useState('');
  const [price, setPrice] = useState('');
  const [description, setDescription] = useState('');
  const [dishes, setDishes] = useState([]);

  const addDish = () => {
    if (dishName.trim() === '' || price.trim() === '' || description.trim() === '') {
      Alert.alert('Please fill in all fields');
      return;
    }

    const newDish = {
      id: Math.random().toString(),
      name: dishName,
      price: price,
      description: description,
    };

    setDishes((currentDishes) => [...currentDishes, newDish]);

    setDishName('');
    setPrice('');
    setDescription('');
  };

  const deleteDish = (dishId) => {
    setDishes((currentDishes) => currentDishes.filter((dish) => dish.id !== dishId));
  };

  return (
    <View style={styles.container}>
      <Text style={styles.header}>Chef's Menu</Text>
      
      {/* Form to add a new dish */}
      <TextInput
        placeholder="Dish Name"
        value={dishName}
        onChangeText={setDishName}
        style={styles.input}
      />
      <TextInput
        placeholder="Price"
        value={price}
        onChangeText={setPrice}
        keyboardType="numeric"
        style={styles.input}
      />
      <TextInput
        placeholder="Description"
        value={description}
        onChangeText={setDescription}
        multiline
        style={styles.input}
      />
      <TouchableOpacity style={styles.addButton} onPress={addDish}>
        <Text style={styles.addButtonText}>Add Dish</Text>
      </TouchableOpacity>

      {/* List of added dishes */}
      <FlatList
        data={dishes}
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => (
          <View style={styles.dishItem}>
            <Text style={styles.dishText}>{item.name} - ${item.price}</Text>
            <Text>{item.description}</Text>
            <TouchableOpacity
              style={styles.deleteButton}
              onPress={() => deleteDish(item.id)}
            >
              <Text style={styles.deleteButtonText}>Delete</Text>
            </TouchableOpacity>
          </View>
        )}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
  },
  header: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  input: {
    borderWidth: 1,
    borderColor: '#ccc',
    padding: 10,
    marginBottom: 10,
    borderRadius: 5,
  },
  addButton: {
    backgroundColor: '#28a745',
    padding: 10,
    borderRadius: 5,
    alignItems: 'center',
    marginBottom: 20,
  },
  addButtonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: 'bold',
  },
  dishItem: {
    borderBottomWidth: 1,
    borderBottomColor: '#ccc',
    paddingBottom: 10,
    marginBottom: 10,
  },
  dishText: {
    fontSize: 18,
    fontWeight: 'bold',
  },
  deleteButton: {
    backgroundColor: '#dc3545',
    padding: 5,
    borderRadius: 5,
    alignItems: 'center',
    marginTop: 5,
  },
  deleteButtonText: {
    color: 'white',
    fontSize: 14,
  },
});

export default ChefMenuScreen;